#  Copyright 2008 Red Hat, Inc.
#
#  Permission is hereby granted, free of charge, to any person obtaining a
#  copy of this software and associated documentation files (the "Software"),
#  to deal in the Software without restriction, including without limitation
#  on the rights to use, copy, modify, merge, publish, distribute, sub
#  license, and/or sell copies of the Software, and to permit persons to whom
#  the Software is furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice (including the next
#  paragraph) shall be included in all copies or substantial portions of the
#  Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL
#  THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
#  IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
#  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# Process this file with autoconf to produce a configure script

# Initialize Autoconf
AC_PREREQ([2.60])
AC_INIT([xf86-video-qxl],
        [0.0.16],
        [https://bugs.freedesktop.org/enter_bug.cgi?product=xorg],
        [xf86-video-qxl])
AC_CONFIG_SRCDIR([Makefile.am])
AC_CANONICAL_HOST

# Initialize Automake
AM_INIT_AUTOMAKE([foreign dist-bzip2])
AM_MAINTAINER_MODE
AC_CONFIG_HEADERS([config.h])

# Require xorg-macros: XORG_DEFAULT_OPTIONS
m4_ifndef([XORG_MACROS_VERSION],
          [m4_fatal([must install xorg-macros 1.4 or later before running autoconf/autogen])])
XORG_MACROS_VERSION(1.4)
XORG_DEFAULT_OPTIONS

# Initialize libtool
AC_DISABLE_STATIC
AC_PROG_INSTALL
AC_PROG_LIBTOOL

AH_TOP([#include "xorg-server.h"])

# Define a configure option for an alternate module directory
AC_ARG_WITH(xorg-module-dir, [  --with-xorg-module-dir=DIR ],
                             [ moduledir="$withval" ],
                             [ moduledir="$libdir/xorg/modules" ])
AC_SUBST(moduledir)

# Store the list of server defined optional extensions in REQUIRED_MODULES
XORG_DRIVER_CHECK_EXT(RANDR, randrproto)
XORG_DRIVER_CHECK_EXT(RENDER, renderproto)
XORG_DRIVER_CHECK_EXT(XV, videoproto)
XORG_DRIVER_CHECK_EXT(XFreeXDGA, xf86dgaproto)

# Obtain compiler/linker options for the driver dependencies
PKG_CHECK_MODULES(XORG, [xorg-server >= 1.0.99.901] xproto fontsproto $REQUIRED_MODULES)

save_CFLAGS="$CFLAGS"
CFLAGS="$XORG_CFLAGS"
AC_CHECK_DECL(XSERVER_LIBPCIACCESS,
	      [XSERVER_LIBPCIACCESS=yes], [XSERVER_LIBPCIACCESS=no],
	      [#include "xorg-server.h"])
CFLAGS="$save_CFLAGS"

if test "x$XSERVER_LIBPCIACCESS" = xyes; then
    PKG_CHECK_MODULES([PCIACCESS], [pciaccess >= 0.10])
fi
AM_CONDITIONAL(XSERVER_LIBPCIACCESS, test "x$XSERVER_LIBPCIACCESS" = xyes)

# Checks for libraries.

enable_qxl=yes
AC_ARG_ENABLE(xspice,
[  --enable-xspice[[=(no|yes|only)]]  Build the xspice driver
                   no      (default) Do not build
                   yes     Build in addition to qxl
                   only    Only build xspice],
[  if test "x$enableval" = "xyes"; then
        enable_xspice=yes
   elif test "x$enableval" = "xonly"; then
        enable_xspice=yes
        enable_qxl=no
   else
        enable_xspice=no
   fi
])

if test "x$enable_xspice" = "xyes"; then
    PKG_CHECK_MODULES([SPICE], [spice-server >= 0.6.3],
    [
        AC_SUBST(SPICE_CFLAGS)
        AC_SUBST(SPICE_LIBS)
    ],
)
else
    enable_xspice=no
fi

AC_ARG_ENABLE(virtio_qxl,
[  --enable-virtio-qxl[[=(no|yes|only)]]  Build the virtio-qxl driver
                   no      (default) Do not build
                   yes     Build in addition to qxl
                   only    Only build virtio-qxl],
[  if test "x$enableval" = "xyes"; then
        enable_virtio_qxl=yes
   elif test "x$enableval" = "xonly"; then
        enable_virtio_qxl=yes
        enable_qxl=no
   else
        enable_virtio_qxl=no
   fi
])

if test ! "x$enable_virtio_qxl" = "xyes"; then
    enable_virtio_qxl=no
fi

AM_CONDITIONAL(BUILD_XSPICE, test "x$enable_xspice" = "xyes")
AM_CONDITIONAL(BUILD_VIRTIO_QXL, test "x$enable_virtio_qxl" = "xyes")
AM_CONDITIONAL(BUILD_QXL, test "x$enable_qxl" = "xyes")

PKG_CHECK_MODULES([SPICE_PROTOCOL], [spice-protocol >= 0.8.1])

AC_CHECK_FILE(.git, [
    GIT_VERSION=`git log -1 --format=%h`
    AC_DEFINE_UNQUOTED([GIT_VERSION], ["$GIT_VERSION"], [Defined if building from git])
    ]
)

AC_CONFIG_FILES([
                Makefile
                src/Makefile
                src/uxa/Makefile
                scripts/Makefile
                examples/Makefile
])
AC_OUTPUT

dnl ==========================================================================
echo "

        xf86-video-qxl $VERSION
        =====================

        prefix:                   ${prefix}
        c compiler:               ${CC}

        Build qxl:                ${enable_qxl}
        Build xspice:             ${enable_xspice}
        Build virtio-qxl:         ${enable_virtio_qxl}
"
